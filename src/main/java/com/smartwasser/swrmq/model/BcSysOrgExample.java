package com.smartwasser.swrmq.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BcSysOrgExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public BcSysOrgExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDeptnameIsNull() {
            addCriterion("DEPTNAME is null");
            return (Criteria) this;
        }

        public Criteria andDeptnameIsNotNull() {
            addCriterion("DEPTNAME is not null");
            return (Criteria) this;
        }

        public Criteria andDeptnameEqualTo(String value) {
            addCriterion("DEPTNAME =", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotEqualTo(String value) {
            addCriterion("DEPTNAME <>", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameGreaterThan(String value) {
            addCriterion("DEPTNAME >", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameGreaterThanOrEqualTo(String value) {
            addCriterion("DEPTNAME >=", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLessThan(String value) {
            addCriterion("DEPTNAME <", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLessThanOrEqualTo(String value) {
            addCriterion("DEPTNAME <=", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameLike(String value) {
            addCriterion("DEPTNAME like", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotLike(String value) {
            addCriterion("DEPTNAME not like", value, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameIn(List<String> values) {
            addCriterion("DEPTNAME in", values, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotIn(List<String> values) {
            addCriterion("DEPTNAME not in", values, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameBetween(String value1, String value2) {
            addCriterion("DEPTNAME between", value1, value2, "deptname");
            return (Criteria) this;
        }

        public Criteria andDeptnameNotBetween(String value1, String value2) {
            addCriterion("DEPTNAME not between", value1, value2, "deptname");
            return (Criteria) this;
        }

        public Criteria andUpperidIsNull() {
            addCriterion("UPPERID is null");
            return (Criteria) this;
        }

        public Criteria andUpperidIsNotNull() {
            addCriterion("UPPERID is not null");
            return (Criteria) this;
        }

        public Criteria andUpperidEqualTo(String value) {
            addCriterion("UPPERID =", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidNotEqualTo(String value) {
            addCriterion("UPPERID <>", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidGreaterThan(String value) {
            addCriterion("UPPERID >", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidGreaterThanOrEqualTo(String value) {
            addCriterion("UPPERID >=", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidLessThan(String value) {
            addCriterion("UPPERID <", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidLessThanOrEqualTo(String value) {
            addCriterion("UPPERID <=", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidLike(String value) {
            addCriterion("UPPERID like", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidNotLike(String value) {
            addCriterion("UPPERID not like", value, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidIn(List<String> values) {
            addCriterion("UPPERID in", values, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidNotIn(List<String> values) {
            addCriterion("UPPERID not in", values, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidBetween(String value1, String value2) {
            addCriterion("UPPERID between", value1, value2, "upperid");
            return (Criteria) this;
        }

        public Criteria andUpperidNotBetween(String value1, String value2) {
            addCriterion("UPPERID not between", value1, value2, "upperid");
            return (Criteria) this;
        }

        public Criteria andDeptorderIsNull() {
            addCriterion("DEPTORDER is null");
            return (Criteria) this;
        }

        public Criteria andDeptorderIsNotNull() {
            addCriterion("DEPTORDER is not null");
            return (Criteria) this;
        }

        public Criteria andDeptorderEqualTo(Long value) {
            addCriterion("DEPTORDER =", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderNotEqualTo(Long value) {
            addCriterion("DEPTORDER <>", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderGreaterThan(Long value) {
            addCriterion("DEPTORDER >", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderGreaterThanOrEqualTo(Long value) {
            addCriterion("DEPTORDER >=", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderLessThan(Long value) {
            addCriterion("DEPTORDER <", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderLessThanOrEqualTo(Long value) {
            addCriterion("DEPTORDER <=", value, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderIn(List<Long> values) {
            addCriterion("DEPTORDER in", values, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderNotIn(List<Long> values) {
            addCriterion("DEPTORDER not in", values, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderBetween(Long value1, Long value2) {
            addCriterion("DEPTORDER between", value1, value2, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptorderNotBetween(Long value1, Long value2) {
            addCriterion("DEPTORDER not between", value1, value2, "deptorder");
            return (Criteria) this;
        }

        public Criteria andDeptcodeIsNull() {
            addCriterion("DEPTCODE is null");
            return (Criteria) this;
        }

        public Criteria andDeptcodeIsNotNull() {
            addCriterion("DEPTCODE is not null");
            return (Criteria) this;
        }

        public Criteria andDeptcodeEqualTo(String value) {
            addCriterion("DEPTCODE =", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeNotEqualTo(String value) {
            addCriterion("DEPTCODE <>", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeGreaterThan(String value) {
            addCriterion("DEPTCODE >", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeGreaterThanOrEqualTo(String value) {
            addCriterion("DEPTCODE >=", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeLessThan(String value) {
            addCriterion("DEPTCODE <", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeLessThanOrEqualTo(String value) {
            addCriterion("DEPTCODE <=", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeLike(String value) {
            addCriterion("DEPTCODE like", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeNotLike(String value) {
            addCriterion("DEPTCODE not like", value, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeIn(List<String> values) {
            addCriterion("DEPTCODE in", values, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeNotIn(List<String> values) {
            addCriterion("DEPTCODE not in", values, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeBetween(String value1, String value2) {
            addCriterion("DEPTCODE between", value1, value2, "deptcode");
            return (Criteria) this;
        }

        public Criteria andDeptcodeNotBetween(String value1, String value2) {
            addCriterion("DEPTCODE not between", value1, value2, "deptcode");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CREATETIME is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CREATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("CREATETIME >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterionForJDBCDate("CREATETIME <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("CREATETIME <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("CREATETIME in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("CREATETIME not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATETIME between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("CREATETIME not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andChdeptmidIsNull() {
            addCriterion("CHDEPTMID is null");
            return (Criteria) this;
        }

        public Criteria andChdeptmidIsNotNull() {
            addCriterion("CHDEPTMID is not null");
            return (Criteria) this;
        }

        public Criteria andChdeptmidEqualTo(Long value) {
            addCriterion("CHDEPTMID =", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidNotEqualTo(Long value) {
            addCriterion("CHDEPTMID <>", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidGreaterThan(Long value) {
            addCriterion("CHDEPTMID >", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidGreaterThanOrEqualTo(Long value) {
            addCriterion("CHDEPTMID >=", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidLessThan(Long value) {
            addCriterion("CHDEPTMID <", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidLessThanOrEqualTo(Long value) {
            addCriterion("CHDEPTMID <=", value, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidIn(List<Long> values) {
            addCriterion("CHDEPTMID in", values, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidNotIn(List<Long> values) {
            addCriterion("CHDEPTMID not in", values, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidBetween(Long value1, Long value2) {
            addCriterion("CHDEPTMID between", value1, value2, "chdeptmid");
            return (Criteria) this;
        }

        public Criteria andChdeptmidNotBetween(Long value1, Long value2) {
            addCriterion("CHDEPTMID not between", value1, value2, "chdeptmid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated do_not_delete_during_merge Tue Jan 20 11:13:30 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BC_SYS_ORG
     *
     * @mbggenerated Tue Jan 20 11:13:30 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}